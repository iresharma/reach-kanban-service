# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import kanban_pb2 as kanban__pb2


class KanbanPackageStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitializeKanban = channel.unary_unary(
                '/kanban_package.KanbanPackage/InitializeKanban',
                request_serializer=kanban__pb2.CreateKanbanRequest.SerializeToString,
                response_deserializer=kanban__pb2.UserAccount.FromString,
                )
        self.GetKanban = channel.unary_unary(
                '/kanban_package.KanbanPackage/GetKanban',
                request_serializer=kanban__pb2.GetKanbanRequest.SerializeToString,
                response_deserializer=kanban__pb2.KanbanResponse.FromString,
                )
        self.AddItem = channel.unary_unary(
                '/kanban_package.KanbanPackage/AddItem',
                request_serializer=kanban__pb2.Item.SerializeToString,
                response_deserializer=kanban__pb2.Item.FromString,
                )
        self.UpdateStatus = channel.unary_unary(
                '/kanban_package.KanbanPackage/UpdateStatus',
                request_serializer=kanban__pb2.UpdateStatusRequest.SerializeToString,
                response_deserializer=kanban__pb2.Item.FromString,
                )
        self.UpdateItem = channel.unary_unary(
                '/kanban_package.KanbanPackage/UpdateItem',
                request_serializer=kanban__pb2.Item.SerializeToString,
                response_deserializer=kanban__pb2.Item.FromString,
                )


class KanbanPackageServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitializeKanban(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKanban(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KanbanPackageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitializeKanban': grpc.unary_unary_rpc_method_handler(
                    servicer.InitializeKanban,
                    request_deserializer=kanban__pb2.CreateKanbanRequest.FromString,
                    response_serializer=kanban__pb2.UserAccount.SerializeToString,
            ),
            'GetKanban': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKanban,
                    request_deserializer=kanban__pb2.GetKanbanRequest.FromString,
                    response_serializer=kanban__pb2.KanbanResponse.SerializeToString,
            ),
            'AddItem': grpc.unary_unary_rpc_method_handler(
                    servicer.AddItem,
                    request_deserializer=kanban__pb2.Item.FromString,
                    response_serializer=kanban__pb2.Item.SerializeToString,
            ),
            'UpdateStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStatus,
                    request_deserializer=kanban__pb2.UpdateStatusRequest.FromString,
                    response_serializer=kanban__pb2.Item.SerializeToString,
            ),
            'UpdateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateItem,
                    request_deserializer=kanban__pb2.Item.FromString,
                    response_serializer=kanban__pb2.Item.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kanban_package.KanbanPackage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KanbanPackage(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitializeKanban(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kanban_package.KanbanPackage/InitializeKanban',
            kanban__pb2.CreateKanbanRequest.SerializeToString,
            kanban__pb2.UserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetKanban(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kanban_package.KanbanPackage/GetKanban',
            kanban__pb2.GetKanbanRequest.SerializeToString,
            kanban__pb2.KanbanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kanban_package.KanbanPackage/AddItem',
            kanban__pb2.Item.SerializeToString,
            kanban__pb2.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kanban_package.KanbanPackage/UpdateStatus',
            kanban__pb2.UpdateStatusRequest.SerializeToString,
            kanban__pb2.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kanban_package.KanbanPackage/UpdateItem',
            kanban__pb2.Item.SerializeToString,
            kanban__pb2.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
